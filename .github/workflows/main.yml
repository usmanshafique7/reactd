name: SSH Setup and Connection

on:
  push:
    branches:
      - main

jobs:
  setup-ssh:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        echo "Setting up SSH..."
        
        # Create .ssh directory if it doesn't exist
        mkdir -p ~/.ssh
        
        # Add the private key from GitHub Secrets
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519

        # Add the server's public key to known_hosts
        echo "Adding server public key to known_hosts..."
        ssh-keyscan -H -p 2222 ${{ secrets.SERVER_SSH_IP }} >> ~/.ssh/known_hosts

        # Use ssh-agent to load the private key
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519

    - name: Test SSH Connection
      run: |
        echo "Testing SSH Connection..."
        ssh -i ~/.ssh/id_ed25519 -p 2222 -o StrictHostKeyChecking=no -o PreferredAuthentications=publickey ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_SSH_IP }} -v
        echo "done done done"
      env:
        SERVER_SSH_IP: ${{ secrets.SERVER_SSH_IP }}

    - name: Build application
      run: |
        npm install
        npm run build

    - name: Package build
      run: |
        if [ ! -d "build" ]; then
            echo "Error: build directory not found!"
            exit 1
        fi
        tar -cvf build.tar.gz build

    - name: Deploy to Tomcat server
      env:
        SERVER_SSH_IP: ${{ secrets.SERVER_SSH_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        TOMCAT_WEBAPPS_PATH: ${{ secrets.TOMCAT_WEBAPPS_PATH }}
      run: |
        echo "Transferring build archive to the server..."
        
        # Use /tmp as a temporary directory for the transfer
        scp -P 2222 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build.tar.gz $SERVER_USER@$SERVER_SSH_IP:/tmp/build.tar.gz

        echo "Deploying application to Tomcat..."
        ssh -p 2222 -t -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $SERVER_USER@$SERVER_SSH_IP << EOF
          echo "Stopping Tomcat server..."
          sudo systemctl stop tomcat

          echo "Cleaning up old files..."
          sudo rm -rf $TOMCAT_WEBAPPS_PATH/ROOT/*

          echo "Extracting new build files..."
          sudo tar -xzf /tmp/build.tar.gz -C $TOMCAT_WEBAPPS_PATH/ROOT

          echo "Starting Tomcat server..."
          sudo systemctl start tomcat

          echo "Deployment completed successfully!"
        EOF
